name: Playwright Tests on Custom Runner Extended

on:
    push:
        branches: [main, master]
    pull_request:
        branches: [main, master]
    workflow_dispatch:

env:
    URL: ${{ secrets.URL }}
    API_URL: ${{ secrets.API_URL }}
    USER_NAME: ${{ secrets.USER_NAME }}
    EMAIL: ${{ secrets.EMAIL }}
    PASSWORD: ${{ secrets.PASSWORD }}

permissions:
    id-token: write
    contents: read
    pages: write

jobs:
    setup-and-smoke-test:
        name: Setup and Smoke Test
        timeout-minutes: 60
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Playwright Setup on Runner
              uses: ./.github/actions/playwright-setup

            - name: Run Smoke tests
              id: smoke
              run: npm run smoke

            - name: Upload Playwright Reports
              if: always()
              uses: ./.github/actions/playwright-report
              with:
                  test-step-outcome: ${{ steps.smoke.outcome }}

    sanity-test:
        name: Sanity Test
        needs: setup-and-smoke-test
        timeout-minutes: 60
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Playwright Setup on Runner
              uses: ./.github/actions/playwright-setup

            - name: Run Sanity tests
              id: sanity
              run: npm run sanity

            - name: Upload Playwright Reports
              if: always()
              uses: ./.github/actions/playwright-report
              with:
                  test-step-outcome: ${{ steps.sanity.outcome }}

    api-test:
        name: API Test
        needs: setup-and-smoke-test
        timeout-minutes: 60
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Playwright Setup on Runner
              uses: ./.github/actions/playwright-setup

            - name: Run API tests
              id: api
              run: npm run api

            - name: Upload Playwright Reports
              if: always()
              uses: ./.github/actions/playwright-report
              with:
                  test-step-outcome: ${{ steps.api.outcome }}

    regression-test:
        name: Regression Test
        needs: setup-and-smoke-test
        timeout-minutes: 60
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Playwright Setup on Runner
              uses: ./.github/actions/playwright-setup

            - name: Run Regression tests
              id: regression
              run: npm run regression

            - name: Upload Playwright Reports
              if: always()
              uses: ./.github/actions/playwright-report
              with:
                  test-step-outcome: ${{ steps.regression.outcome }}

    deploy-report:
        name: Deploy Report
        if: always()
        needs: [setup-and-smoke-test, sanity-test, api-test, regression-test]
        timeout-minutes: 60
        runs-on: ubuntu-latest
        outputs:
            report_url: ${{ steps.deployment.outputs.page_url }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Cache node_modules
              uses: actions/cache@v3
              with:
                  path: |
                      node_modules
                  key: modules-${{ hashFiles('package-lock.json') }}

            - name: Cache Playwright
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/ms-playwright
                  key: playwright-${{ hashFiles('package-lock.json') }}

            - uses: actions/checkout@v2

            - name: Download All Artifacts
              uses: actions/download-artifact@v4
              with:
                  path: merged-reports/

            - name: Merge HTML Reports
              run: |
                  mkdir -p merged-reports/html
                  for dir in merged-reports/*; do
                      if [ -f "$dir/index.html" ]; then
                          cp -r "$dir/"* merged-reports/html/
                      fi
                  done

            - name: Upload Merged Reports as Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: Merged HTML Reports
                  path: merged-reports/html/
                  retention-days: 3

            - name: Setup Pages
              uses: actions/configure-pages@v5

            - name: Upload Pages Artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: merged-reports/html/

            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
